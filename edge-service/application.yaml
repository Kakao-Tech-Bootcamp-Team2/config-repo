server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

spring:
  lifecycle:
    timeout-per-shutdown-phase: 15s
  rabbitmq:
    host: ${vault.rabbitmq_host}
    port: ${vault.rabbitmq_port}
    username: ${vault.rabbitmq_username}
    password: ${vault.rabbitmq_password}
  cloud:
    gateway:
      httpclient:
        connect-timeout: 2000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      default-filters:
        - TokenRelay
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 50ms
              maxBackOff: 500ms
              factor: 2
              basedOnPreviousValue: false
      mvc:
        routes:
          - id: ingredients-manage-route
            uri: ${vault.ingredients-manage-route_uri}
            predicates:
              - Path=/ingredients/**
          - id: refrigerators-route
            uri: ${vault.ingredients-manage-route_uri}
            predicates:
              - Path=/refrigerators/**
          - id: recipe-review-route
            uri: ${vault.recipe-review-route_uri}
            predicates:
              - Path=/reviews/**
  #TODO Circuit Breaker, Rate Limiter 관련 설정 추가 (추후 트래픽 테스트하고 추가 예정)
  datasource:
    master:
      url: ${vault.master_mariadb_url}
      driver-class-name: org.mariadb.jdbc.Driver
      username: ${vault.master_mariadb_username}
      password: ${vault.master_mariadb_password}
    slave:
      url: ${vault.slave_mariadb_url}
      driver-class-name: org.mariadb.jdbc.Driver
      username: ${vault.slave_mariadb_username}
      password: ${vault.slave_mariadb_password}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MariaDBDialect

  data:
    redis:
      connect-timeout: 2s
      host: ${vault.redis_host}
      port: ${vault.redis_port}
      timeout: 1s

  mail:
    host: ${vault.mail_host}
    port: ${vault.mail_port}
    username: ${vault.mail_username}
    password: ${vault.mail_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${vault.google_client_id}
            client-secret: ${vault.google_client_secret}
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email

          naver:
            client-id: ${vault.naver_client_id}
            client-secret: ${vault.naver_client_secret}
            redirect-uri: ${vault.naver_redirect_uri}
            authorization-grant-type: authorization_code
            scope:
              - email
            client-name: Naver

          kakao:
            client-id: ${vault.kakao_client_id}
            client-secret: ${vault.kakao_client_secret}
            redirect-uri: ${vault.kakao_redirect_uri}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - account_email
            client-name: Kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

jwt:
  secretKey: ${vault.jwt_secretKey}
  accessExpiration: ${vault.jwt_accessExpiration}
  refreshExpiration: ${vault.jwt_refreshExpiration}

rabbit:
  queueName: ${vault.mail_queue_name}
  exchangeName: ${vault.mail_exchange_name}
  routingKey: ${vault.mail_routing_key}
  dlq: ${vault.mail_dlq}
  dlx: ${vault.mail_dlx}
  dlqRoutingKey: ${vault.mail_dlq_routing_key}

logging:
  level:
    org:
      springframework:
        security:
          web:
            FilterChainProxy: debug
      apache:
        coyote:
          http11: info
      hibernate:
        SQL: debug
